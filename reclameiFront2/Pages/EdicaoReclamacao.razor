@page "/editaReclamacao/{id}"


@using System.Net.Http
@using System.Text.Json
@using System.Text
@using reclameiFront2.Helpers
@using Microsoft.AspNetCore.Http

@inject NavigationManager Navigation
@inject Api api
@inject IJSRuntime JS


<h3>Editar Reclamação</h3>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
           
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title text-center">Edição de Reclamação</h5>
                    @if (reclamacao != null)
                    {
                    <EditForm Model="@reclamacao" OnValidSubmit="EditarReclamacao">
                        <div class="form-group">
                            <label for="titulo">Título</label>
                            <InputText class="form-control" id="titulo" @bind-Value="reclamacao.Titulo" required />

                        </div>
                        <br>
                        <div class="form-group">
                            <label for="conteudo">Conteúdo</label>
                            <InputTextArea class="form-control" id="conteudo" @bind-Value="reclamacao.Conteudo" rows="4" required />
                        </div>
                        <br>
                        <div class="form-group">
                            <label for="empresa">Nome da Empresa da Reclamação</label>
                            <select class="form-control" id="empresa" @bind="selectedEmpresaId">
                                <option value=@reclamacao.IdEmpresa>Selecione uma empresa</option>
                                @foreach (var empresa in empresas)
                                {
                                    <option value="@empresa.Id">@empresa.Nome</option>
                                }
                            </select>
                        </div>
                        <br>
                        <button type="submit" class="btn btn-success btn-block">Atualizar</button>
                    </EditForm>
                    }
                    else
                    {
                    <p>Carregando dados...</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Empresa> empresas = new List<Empresa>();
    private string? selectedEmpresaId;
    private Reclamacao reclamacao = null;
    
    [Parameter]
    public string id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await CarregarEmpresas();
        await CarregarReclamacao();
    }

    private async Task CarregarEmpresas()
    {
        try
        {
            var list = await api.GetAsync<List<Empresa>>("/api/Empresa", "");
            empresas = list;


        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar empresas: {ex.Message}");
        }
    }

    private async Task EditarReclamacao()
    {
        try
        {
            if (string.IsNullOrEmpty(selectedEmpresaId))
            {
                Console.WriteLine("Selecione uma empresa.");
                return;
            }

            reclamacao.IdEmpresa = selectedEmpresaId;

            await api.PutAsync<Reclamacao>("/api/Reclamacao", id, reclamacao);


            await JS.InvokeVoidAsync("alert", "Reclamação editada com sucesso!");
            await JS.InvokeVoidAsync("eval", $"window.location.href='/minhasReclamacoes'");
            Console.WriteLine("Reclamação editada com sucesso!");

        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Erro ao enviar reclamação: {ex.Message}");
            Console.WriteLine($"Erro ao enviar reclamação: {ex.Message}");
        }
    }

    private async Task CarregarReclamacao()
    {
        try
        {
            reclamacao = await api.GetAsync<Reclamacao>("/api/Reclamacao", id);
            selectedEmpresaId = reclamacao.IdEmpresa;
        }
        catch (Exception ex)
        {
            await JS.InvokeVoidAsync("alert", $"Erro ao carregar reclamação: {ex.Message}");
            Console.WriteLine($"Erro ao carregar reclamação: {ex.Message}");
        }
    }

    public class Empresa
    {
        public string Id { get; set; }
        public string Nome { get; set; }
        public string Login { get; set; }
        public string Senha { get; set; }
        public string Cnpj { get; set; }
    }

    public class Reclamacao
    {
        public string? Id { get; set; }
        public string Titulo { get; set; } = "";
        public string Conteudo { get; set; } = "";
        public bool Atendida { get; set; }
        public string IdCliente { get; set; }
        public string IdEmpresa { get; set; }

    }
}
